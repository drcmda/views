'use client'

/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.16 duck.glb 
*/

import { useGLTF, AccumulativeShadows, RandomizedLight } from '@react-three/drei'

export default function Duck(props) {
  const { nodes, materials } = useGLTF('/duck.glb')
  return (
    <group {...props} dispose={null}>
      <mesh        
        castShadow
        receiveShadow
        geometry={nodes.character_duck.geometry}
        material={materials['White.026']}
        rotation={[Math.PI / 2, 0, 0]}>
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.character_duckArmLeft.geometry}
          material={materials['White.026']}
          position={[0.204, 0, -0.634]}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.character_duckArmRight.geometry}
          material={materials['White.026']}
          position={[-0.204, 0, -0.634]}
        />
        <group position={[0, 0, -0.704]}>
          <mesh castShadow receiveShadow geometry={nodes.Cube1338.geometry} material={materials['White.026']} />
          <mesh castShadow receiveShadow geometry={nodes.Cube1338_1.geometry} material={materials['Yellow.043']} />
          <mesh castShadow receiveShadow geometry={nodes.Cube1338_2.geometry} material={materials['Black.027']} />
        </group>
      </mesh>
      <AccumulativeShadows temporal frames={100}>
        <RandomizedLight position={[2, 5, 2]} radius={10} />
      </AccumulativeShadows>
    </group>
  )
}

useGLTF.preload('/duck.glb')
